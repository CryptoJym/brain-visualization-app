#!/bin/bash
# Fix Brain Visualization Deployment
# Generated by Grok-4 Analysis

echo "üß† Fixing Brain Visualization App"
echo "================================"

# 1. First, let's commit the changes
echo "üìù Reviewing changes..."
git diff --stat

echo -e "\n‚úÖ Adding and committing changes..."
git add .
git commit -m "feat: Add CleanBrainVis component and responsive improvements

- Add new CleanBrainVis component for better visualization
- Update ResponsiveBrainVis with performance improvements
- Update Tailwind config for better styling
- Prepare for production deployment"

# 2. Fix chunk size issue by adding dynamic imports
echo -e "\nüîß Fixing chunk size issues..."
cat > vite.config.js << 'EOF'
import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  build: {
    rollupOptions: {
      output: {
        manualChunks: {
          'react-vendor': ['react', 'react-dom'],
          'three-vendor': ['three', '@react-three/fiber', '@react-three/drei'],
          'ui-vendor': ['framer-motion', '@radix-ui/react-dialog']
        }
      }
    },
    chunkSizeWarningLimit: 600
  }
})
EOF

# 3. Update package.json scripts
echo -e "\nüì¶ Updating deployment scripts..."
npm install --save-dev @vercel/analytics

# 4. Create public deployment configuration
echo -e "\nüåê Creating public deployment config..."
cat > vercel.json << 'EOF'
{
  "buildCommand": "npm run build",
  "outputDirectory": "dist",
  "framework": "vite",
  "public": true,
  "rewrites": [
    {
      "source": "/(.*)",
      "destination": "/index.html"
    }
  ],
  "headers": [
    {
      "source": "/(.*)",
      "headers": [
        {
          "key": "X-Content-Type-Options",
          "value": "nosniff"
        },
        {
          "key": "X-Frame-Options",
          "value": "DENY"
        },
        {
          "key": "X-XSS-Protection",
          "value": "1; mode=block"
        }
      ]
    }
  ]
}
EOF

# 5. Add environment example
echo -e "\nüîê Creating environment example..."
cat > .env.example << 'EOF'
# Brain Visualization Environment Variables
VITE_APP_TITLE=Brain Visualization
VITE_PUBLIC_URL=https://brain-visualization.vercel.app
EOF

# 6. Update gitignore
echo -e "\nüìù Updating .gitignore..."
echo ".vercel" >> .gitignore

# 7. Build and test locally
echo -e "\nüèóÔ∏è Building for production..."
npm run build

# 8. Push to GitHub
echo -e "\nüöÄ Pushing to GitHub..."
git add .
git commit -m "fix: Configure for public Vercel deployment

- Add Vercel public configuration
- Fix chunk size warnings with manual chunks
- Add security headers
- Add environment example"

git push origin main

echo -e "\n‚úÖ Fixes applied! Next steps:"
echo "1. Go to https://vercel.com/vuplicity/brain-visualization-app/settings"
echo "2. Under 'Deployment Protection', disable password protection"
echo "3. Or redeploy to a new public URL:"
echo "   vercel --prod --public"
echo ""
echo "Alternative: Deploy to your personal Vercel:"
echo "   vercel --prod --scope=your-username"